//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocietyAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SocietyApp_CRUDEntities1 : DbContext
    {
        public SocietyApp_CRUDEntities1()
            : base("name=SocietyApp_CRUDEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SocietyTable> SocietyTables { get; set; }
    
        public virtual ObjectResult<SPCrudSociety_Result> SPCrudSociety(Nullable<int> iD, string companyName, string password, string firstName, string lastName, string username, string licNumber, string companySize, string email, Nullable<int> mobileNumber, string option)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var licNumberParameter = licNumber != null ?
                new ObjectParameter("LicNumber", licNumber) :
                new ObjectParameter("LicNumber", typeof(string));
    
            var companySizeParameter = companySize != null ?
                new ObjectParameter("CompanySize", companySize) :
                new ObjectParameter("CompanySize", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNumberParameter = mobileNumber.HasValue ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCrudSociety_Result>("SPCrudSociety", iDParameter, companyNameParameter, passwordParameter, firstNameParameter, lastNameParameter, usernameParameter, licNumberParameter, companySizeParameter, emailParameter, mobileNumberParameter, optionParameter);
        }
    }
}
